# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  tests:
    docker:
      - image: cimg/python:3.11.4

      steps:
        - checkout

        - run:
            name: Installation des dépendances
            command: |
              python -m venv env
              . env/bin/activate
              pip install --upgrade pip
              pip install -r requirements.txt

        - run:
            name: Flake8 + Test
            command: |
              . env/bin/activate
              flake8
              pytest

  build-and-push:
    docker:
      - image: docker:stable  # Image de base pour les jobs

    steps:
      - checkout  # Récupérer le code depuis GitHub

      - setup_remote_docker:  # Configuration de Docker
          version: 20.10.23

      - run:
          name: Build Image
          command: |
            docker login $DO_REGISTRY -u $DO_API_TOKEN -p $DO_API_TOKEN
            docker build -t $DO_REGISTRY/oclettings .
            docker tag $DO_REGISTRY/oclettings:latest $DO_REGISTRY/oclettings:latest

      - run:
          name: Push to Digital Ocean Registry
          command: |
            docker login $DO_REGISTRY -u $DO_API_TOKEN -p $DO_API_TOKEN
            docker push $DO_REGISTRY/oclettings:latest

  deploy:
    machine: true
    steps:
      - checkout

      - run:
          name: Deploy to Digital Ocean
          command: |
            ssh $DROPLET_USER@$DROPLET_IP -i ~./.ssh/circleci "docker pull $DO_REGISTRY/oclettings:latest"
            ssh $DROPLET_USER@$DROPLET_IP -i ~./.ssh/circleci "docker-compose -f /usr/src/app/docker-compose.yml up -d"


# Orchestrate our job run sequence
workflows:
  version: 2
  tests:
    jobs:
      - tests:
          filters:
            branches:
              only:
                - main
  build-and-push:
    jobs:
      - tests:
          filters:
            branches:
              only:
                - main
      - build-and-push:
          requires:
            - tests
          filters:
            branches:
              only:
                - main
      - deploy:
          requires:
            - tests
            - build-and-push
          filters:
            branches:
              only:
                - main
